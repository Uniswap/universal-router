// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Uniswap Gas Tests Mixing V2 and V3 with Narwhal Router. Interleaving routes gas: V2, then V3 1`] = `
Object {
  "calldataByteLength": 836,
  "gasUsed": 197951,
}
`;

exports[`Uniswap Gas Tests Mixing V2 and V3 with Narwhal Router. Interleaving routes gas: V3, then V2 1`] = `
Object {
  "calldataByteLength": 836,
  "gasUsed": 190504,
}
`;

exports[`Uniswap Gas Tests Mixing V2 and V3 with Narwhal Router. Split routes gas: ERC20 --> ERC20 split V2 and V2 different routes, different input tokens, each two hop, with batch permit 1`] = `
Object {
  "calldataByteLength": 1540,
  "gasUsed": 307633,
}
`;

exports[`Uniswap Gas Tests Mixing V2 and V3 with Narwhal Router. Split routes gas: ERC20 --> ERC20 split V2 and V2 different routes, each two hop, with explicit permit 1`] = `
Object {
  "calldataByteLength": 1220,
  "gasUsed": 315424,
}
`;

exports[`Uniswap Gas Tests Mixing V2 and V3 with Narwhal Router. Split routes gas: ERC20 --> ERC20 split V2 and V2 different routes, each two hop, without explicit permit 1`] = `
Object {
  "calldataByteLength": 900,
  "gasUsed": 311297,
}
`;

exports[`Uniswap Gas Tests Mixing V2 and V3 with Narwhal Router. Split routes gas: ERC20 --> ERC20 split V2 and V3, one hop 1`] = `
Object {
  "calldataByteLength": 996,
  "gasUsed": 181551,
}
`;

exports[`Uniswap Gas Tests Mixing V2 and V3 with Narwhal Router. Split routes gas: ERC20 --> ERC20 split V2 and V3, one hop, ADDRESS_THIS flag 1`] = `
Object {
  "calldataByteLength": 996,
  "gasUsed": 181326,
}
`;

exports[`Uniswap Gas Tests Mixing V2 and V3 with Narwhal Router. Split routes gas: ERC20 --> ETH split V2 and V3, exactOut, one hop 1`] = `
Object {
  "calldataByteLength": 964,
  "gasUsed": 198784,
}
`;

exports[`Uniswap Gas Tests Mixing V2 and V3 with Narwhal Router. Split routes gas: ERC20 --> ETH split V2 and V3, one hop 1`] = `
Object {
  "calldataByteLength": 964,
  "gasUsed": 189393,
}
`;

exports[`Uniswap Gas Tests Mixing V2 and V3 with Narwhal Router. Split routes gas: ETH --> ERC20 split V2 and V3, one hop 1`] = `
Object {
  "calldataByteLength": 1124,
  "gasUsed": 215600,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ERC20 --> ERC20 gas: exactIn trade, where an output fee is taken 1`] = `
Object {
  "calldataByteLength": 836,
  "gasUsed": 129811,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ERC20 --> ERC20 gas: exactIn, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 516,
  "gasUsed": 108252,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ERC20 --> ERC20 gas: exactIn, one trade, three hops 1`] = `
Object {
  "calldataByteLength": 580,
  "gasUsed": 246673,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ERC20 --> ERC20 gas: exactIn, one trade, three hops, no deadline 1`] = `
Object {
  "calldataByteLength": 548,
  "gasUsed": 246415,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ERC20 --> ERC20 gas: exactIn, one trade, two hops 1`] = `
Object {
  "calldataByteLength": 548,
  "gasUsed": 179151,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ERC20 --> ERC20 gas: exactIn, one trade, two hops, MSG_SENDER flag 1`] = `
Object {
  "calldataByteLength": 548,
  "gasUsed": 178908,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ERC20 --> ERC20 gas: exactOut, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 516,
  "gasUsed": 107369,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ERC20 --> ERC20 gas: exactOut, one trade, three hops 1`] = `
Object {
  "calldataByteLength": 580,
  "gasUsed": 250892,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ERC20 --> ERC20 gas: exactOut, one trade, two hops 1`] = `
Object {
  "calldataByteLength": 548,
  "gasUsed": 180851,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ERC20 --> ETH gas: exactIn, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 644,
  "gasUsed": 125288,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ERC20 --> ETH gas: exactOut, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 804,
  "gasUsed": 130595,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ERC20 --> ETH gas: exactOut, with ETH fee 1`] = `
Object {
  "calldataByteLength": 964,
  "gasUsed": 146457,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ETH --> ERC20 gas: exactIn, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 644,
  "gasUsed": 108932,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Narwhal Router. ETH --> ERC20 gas: exactOut, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 772,
  "gasUsed": 139537,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Router02. gas: ERC20 --> ERC20 exactIn, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 420,
  "gasUsed": 121407,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Router02. gas: ERC20 --> ERC20 exactIn, one trade, two hops 1`] = `
Object {
  "calldataByteLength": 452,
  "gasUsed": 193278,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Router02. gas: ERC20 --> ERC20 exactOut, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 420,
  "gasUsed": 122001,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Router02. gas: ERC20 --> ETH exactOut ETH, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 580,
  "gasUsed": 122933,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV2 with Router02. gas: ETH --> ERC20 exactIn, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 420,
  "gasUsed": 124889,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Narwhal Router. ERC20 --> ERC20 gas: exactIn, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 516,
  "gasUsed": 116475,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Narwhal Router. ERC20 --> ERC20 gas: exactIn, one trade, three hops 1`] = `
Object {
  "calldataByteLength": 548,
  "gasUsed": 277974,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Narwhal Router. ERC20 --> ERC20 gas: exactIn, one trade, two hops 1`] = `
Object {
  "calldataByteLength": 548,
  "gasUsed": 192900,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Narwhal Router. ERC20 --> ERC20 gas: exactOut, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 516,
  "gasUsed": 117738,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Narwhal Router. ERC20 --> ERC20 gas: exactOut, one trade, three hops 1`] = `
Object {
  "calldataByteLength": 548,
  "gasUsed": 422409,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Narwhal Router. ERC20 --> ERC20 gas: exactOut, one trade, two hops 1`] = `
Object {
  "calldataByteLength": 548,
  "gasUsed": 315049,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Narwhal Router. ERC20 --> ETH gas: exactIn swap 1`] = `
Object {
  "calldataByteLength": 644,
  "gasUsed": 133559,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Narwhal Router. ERC20 --> ETH gas: exactOut swap 1`] = `
Object {
  "calldataByteLength": 644,
  "gasUsed": 134894,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Narwhal Router. ETH --> ERC20 gas: exactIn swap 1`] = `
Object {
  "calldataByteLength": 644,
  "gasUsed": 246607,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Narwhal Router. ETH --> ERC20 gas: exactOut swap 1`] = `
Object {
  "calldataByteLength": 772,
  "gasUsed": 141608,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Router02. gas: ERC20 --> ERC20 exactIn, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 420,
  "gasUsed": 104733,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Router02. gas: ERC20 --> ERC20 exactIn, one trade, three hops 1`] = `
Object {
  "calldataByteLength": 484,
  "gasUsed": 284015,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Router02. gas: ERC20 --> ERC20 exactIn, one trade, two hops 1`] = `
Object {
  "calldataByteLength": 484,
  "gasUsed": 196837,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Router02. gas: ERC20 --> ERC20 exactOut, one trade, one hop 1`] = `
Object {
  "calldataByteLength": 420,
  "gasUsed": 114904,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Router02. gas: ERC20 --> ERC20 exactOut, one trade, three hops 1`] = `
Object {
  "calldataByteLength": 484,
  "gasUsed": 423372,
}
`;

exports[`Uniswap Gas Tests Trade on UniswapV3 with Router02. gas: ERC20 --> ERC20 exactOut, one trade, two hops 1`] = `
Object {
  "calldataByteLength": 484,
  "gasUsed": 313985,
}
`;
